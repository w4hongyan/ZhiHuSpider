<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LeanCloud.LiveQuery</name>
    </assembly>
    <members>
        <member name="P:LeanCloud.LiveQuery.AVLiveQuery.Channel">
            <summary>
            LiveQuery 传输数据的 AVRealtime 实例
            </summary>
        </member>
        <member name="T:LeanCloud.LiveQuery.AVLiveQuery`1">
            <summary>
            AVLiveQuery 对象
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:LeanCloud.LiveQuery.AVLiveQuery`1.CreateAsync``1(LeanCloud.AVQuery{``0},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            创建
            </summary>
            <typeparam name="T"></typeparam>
            <param name="query"></param>
            <param name="subscriptionId"></param>
            <param name="sessionToken"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="P:LeanCloud.LiveQuery.AVLiveQuery`1.Id">
            <summary>
            当前 AVLiveQuery 对象的 Id
            </summary>
        </member>
        <member name="P:LeanCloud.LiveQuery.AVLiveQuery`1.QueryId">
            <summary>
            LiveQuery 对应的 QueryId
            </summary>
        </member>
        <member name="M:LeanCloud.LiveQuery.AVLiveQuery`1.#ctor(System.String)">
            <summary>
            根据 id 创建 AVLiveQuery 对象
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:LeanCloud.LiveQuery.AVLiveQuery`1.#ctor(LeanCloud.AVQuery{`0})">
            <summary>
            根据 AVQuery 创建 AVLiveQuery 对象
            </summary>
            <param name="query"></param>
        </member>
        <member name="P:LeanCloud.LiveQuery.AVLiveQuery`1.Query">
            <summary>
            AVLiveQuery 对应的 AVQuery 对象
            </summary>
        </member>
        <member name="E:LeanCloud.LiveQuery.AVLiveQuery`1.OnLiveQueryReceived">
            <summary>
            数据推送的触发的事件通知
            </summary>
        </member>
        <member name="M:LeanCloud.LiveQuery.AVLiveQuery`1.On(System.String,System.Action{`0})">
            <summary>
            推送抵达时触发事件通知
            </summary>
            <param name="scope">产生这条推送的原因。
            <remarks>
            create:符合查询条件的对象创建;
            update:符合查询条件的对象属性修改。
            enter:对象修改事件，从不符合查询条件变成符合。
            leave:对象修改时间，从符合查询条件变成不符合。
            delete:对象删除
            login:只对 _User 对象有效，表示用户登录。
            </remarks>
            </param>
            <param name="onRecevived"></param>
        </member>
        <member name="M:LeanCloud.LiveQuery.AVLiveQuery`1.SubscribeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            订阅操作
            </summary>
            <param name="sessionToken"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:LeanCloud.LiveQuery.AVLiveQuery`1.RenewAsync(System.String)">
            <summary>
            增加对该 LiveQuery 对象 7 天的延长订阅有效期
            </summary>
            <param name="sessionToken"></param>
            <returns></returns>
        </member>
        <member name="M:LeanCloud.LiveQuery.AVLiveQuery`1.Unsubscribe(System.String)">
            <summary>
            取消对当前 LiveQuery 对象的订阅
            </summary>
            <param name="sessionToken"></param>
            <returns></returns>
        </member>
        <member name="M:LeanCloud.LiveQuery.AVLiveQuery`1.Emit(System.String,System.String[],System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            本地推送到指定的 LiveQuery
            </summary>
            <param name="scope"></param>
            <param name="payloadMap"></param>
        </member>
    </members>
</doc>
